package:
  name: orthanc
  version: "1.12.7"
  epoch: 0
  description: "Orthanc - a lightweight DICOM server for medical imaging"
  copyright:
    - license: "AGPL-3.0-or-later"
  dependencies:
    runtime:
      - boost-filesystem
      - boost-iostreams
      - boost-thread
      - dcmtk
      - jsoncpp
      - libjpeg-turbo
      - libpng
      - libuuid
      - lua5.4
      - openssl
      - pugixml
      - sqlite

environment:
  contents:
    packages:
      - boost-dev
      - build-base
      - busybox
      - curl
      - curl-dev
      - dcmtk-dev
      - doxygen
      - gtest-dev
      - jsoncpp-dev
      - libjpeg-turbo-dev
      - libpng-dev
      - lua5.4-dev
      - ninja
      - openssl-dev
      - patch
      - protobuf-dev
      - pugixml-dev
      - python3
      - sqlite-dev

vars:
  lua-version: "5.4"

pipeline:
  - uses: fetch
    with:
      uri: https://orthanc.uclouvain.be/downloads/sources/orthanc/Orthanc-${{package.version}}.tar.gz
      expected-sha256: f4349971c9e12f74599ba036c37ce7fe7fe8078b08dddbb83e08cf7b13e53adb

  - uses: cmake/configure
    with:
      opts: |
        -DPUGIXML_DIR=/usr/lib/cmake/pugixml \
        -DSTANDALONE_BUILD=ON \
        -DALLOW_DOWNLOADS=ON \
        -DUSE_BUNDLED_JSONCPP=OFF \
        -DUSE_SYSTEM_CIVETWEB=OFF \
        -DUSE_GOOGLE_TEST_DEBIAN_PACKAGE=OFF \
        -DUSE_SYSTEM_DCMTK=ON \
        -DDCMTK_LIBRARIES=dcmdata;dcmnet;dcmimgle;dcmimage;ofstd;oflog \
        -DLUA_LIBRARIES=/usr/lib/lua5.4/liblua.so \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DUSE_SYSTEM_PUGIXML=ON \
        -DUSE_SYSTEM_OPENSSL=ON \
        -DUSE_SYSTEM_CURL=ON \
        -DUSE_SYSTEM_JSONCPP=ON \
        -DUNIT_TESTS_WITH_HTTP_CONNEXIONS=OFF \
        -S ./OrthancServer/

  - uses: cmake/build

  - uses: cmake/install

  - runs: |
      # Move sbin to bin for consistency
      if [ -d ${{targets.destdir}}/usr/sbin ]; then
        mv ${{targets.destdir}}/usr/sbin/* ${{targets.destdir}}/usr/bin/
        rmdir ${{targets.destdir}}/usr/sbin/
      fi

      # Create plugin directories
      mkdir -p ${{targets.destdir}}/usr/lib/orthanc/plugins/
      mkdir -p ${{targets.destdir}}/etc/orthanc/
      mkdir -p ${{targets.destdir}}/var/lib/orthanc/

      # Install built-in plugins if they exist
      for plugin in libModalityWorklists.so libServeFolders.so libHousekeeper.so libConnectivityChecks.so libDelayedDeletion.so libMultitenantDicom.so; do
        if [ -f $plugin ]; then
          cp $plugin ${{targets.destdir}}/usr/lib/orthanc/plugins/
        fi
      done

      # Create default configuration
      cat > ${{targets.destdir}}/etc/orthanc/orthanc.json << 'EOF'
      {
        "Name" : "Orthanc",
        "StorageDirectory" : "/var/lib/orthanc/db",
        "IndexDirectory" : "/var/lib/orthanc/db",
        "HttpPort" : 8042,
        "DicomPort" : 4242,
        "Plugins" : [ "/usr/lib/orthanc/plugins" ],
        "RemoteAccessAllowed" : false,
        "AuthenticationEnabled" : false,
        "RegisteredUsers" : {
        },
        "DicomModalities" : {
        },
        "OrthancPeers" : {
        },
        "HttpTimeout" : 60,
        "HttpsVerifyPeers" : true,
        "HttpsCACertificates" : "/etc/ssl/certs/ca-certificates.crt",
        "UserMetadata" : {
        },
        "StableAge" : 60,
        "StrictAetComparison" : false,
        "DefaultEncoding" : "Latin1",
        "JobsHistorySize" : 10,
        "SaveJobs" : true
      }
      EOF

  - uses: strip

subpackages:
  - name: ${{package.name}}-postgresql
    description: PostgreSQL plugin for Orthanc
    dependencies:
      runtime:
        - orthanc
        - orthanc-postgresql
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/orthanc/plugins/
          # This will be provided by orthanc-postgresql package

  - name: ${{package.name}}-dicomweb
    description: DICOMweb plugin for Orthanc
    dependencies:
      runtime:
        - orthanc
        - orthanc-dicomweb
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/orthanc/plugins/
          # This will be provided by orthanc-dicomweb package

  - name: ${{package.name}}-gdcm
    description: GDCM plugin for Orthanc
    dependencies:
      runtime:
        - orthanc
        - orthanc-gdcm
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/orthanc/plugins/
          # This will be provided by orthanc-gdcm package

  - name: ${{package.name}}-explorer2
    description: Explorer2 plugin for Orthanc
    dependencies:
      runtime:
        - orthanc
        - orthanc-explorer2
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/orthanc/plugins/
          # This will be provided by orthanc-explorer2 package

  - name: ${{package.name}}-ohif
    description: OHIF plugin for Orthanc
    dependencies:
      runtime:
        - orthanc
        - orthanc-ohif
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/orthanc/plugins/
          # This will be provided by orthanc-ohif package

  - name: ${{package.name}}-python
    description: Python plugin for Orthanc
    dependencies:
      runtime:
        - orthanc
        - orthanc-python
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/orthanc/plugins/
          # This will be provided by orthanc-python package

  - name: ${{package.name}}-housekeeper
    description: Housekeeper plugin for Orthanc
    dependencies:
      runtime:
        - orthanc
        - orthanc-housekeeper
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/orthanc/plugins/
          # This will be provided by orthanc-housekeeper package

  - name: ${{package.name}}-all-plugins
    description: Orthanc with all available plugins
    dependencies:
      runtime:
        - orthanc
        - orthanc-postgresql
        - orthanc-dicomweb
        - orthanc-gdcm
        - orthanc-explorer2
        - orthanc-ohif
        - orthanc-python
        - orthanc-housekeeper
    pipeline:
      - runs: |
          mkdir -p ${{targets.subpkgdir}}/usr/lib/orthanc/plugins/
          echo "This is a meta-package that pulls in all Orthanc plugins"

  - name: ${{package.name}}-doc
    description: Orthanc documentation
    pipeline:
      - uses: split/manpages
      - runs: |
          mkdir -p "${{targets.subpkgdir}}"/usr/share/doc/orthanc
          if [ -d Resources ]; then
            cp -r Resources/Documentation "${{targets.subpkgdir}}"/usr/share/doc/orthanc/ || true
          fi

test:
  pipeline:
    - runs: |
        # Test that Orthanc binary exists and runs
        test -x /usr/bin/Orthanc
        /usr/bin/Orthanc --version

        # Test configuration file is valid JSON
        python3 -c "import json; json.load(open('/etc/orthanc/orthanc.json'))"

        # Test plugin directories exist
        test -d /usr/lib/orthanc/plugins
        test -d /var/lib/orthanc

        # Test that some core plugins are present
        test -f /usr/lib/orthanc/plugins/libModalityWorklists.so || echo "Warning: libModalityWorklists.so not found"
        test -f /usr/lib/orthanc/plugins/libServeFolders.so || echo "Warning: libServeFolders.so not found"
    - uses: test/tw/ldd-check

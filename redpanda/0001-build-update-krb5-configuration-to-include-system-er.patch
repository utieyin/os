From adbd74d437a6966232899e1e6bf7154a49420f0a Mon Sep 17 00:00:00 2001
From: uti <uti.edun@chainguard.dev>
Date: Fri, 23 May 2025 15:46:15 +0000
Subject: [PATCH] build: refactor krb5.BUILD to use cc_import for library
 imports

---
 bazel/thirdparty/krb5.BUILD | 103 +++++++++++++-----------------------
 1 file changed, 38 insertions(+), 65 deletions(-)

diff --git a/bazel/thirdparty/krb5.BUILD b/bazel/thirdparty/krb5.BUILD
index 7a3a434da9..4898f3612b 100644
--- a/bazel/thirdparty/krb5.BUILD
+++ b/bazel/thirdparty/krb5.BUILD
@@ -1,8 +1,7 @@
 load("@bazel_skylib//rules:common_settings.bzl", "int_flag", "string_flag")
-load("@rules_foreign_cc//foreign_cc:defs.bzl", "configure_make")
+load("@rules_cc//cc:defs.bzl", "cc_import")
 
-# Make this build faster by setting `build --@krb5//:build_jobs=8` in user.bazelrc
-# if you have the cores to spare
+# Keep these flags for compatibility with existing build configurations
 int_flag(
     name = "build_jobs",
     build_setting_default = 4,
@@ -15,68 +14,42 @@ string_flag(
     make_variable = "SANITIZERS",
 )
 
-filegroup(
-    name = "srcs",
-    srcs = glob(["**"]),
+cc_import(
+    name = "krb5",
+    shared_library = select({
+        "@platforms//os:linux": "/usr/lib/libkrb5.so",
+        # Add other platforms as needed
+        "//conditions:default": "/usr/lib/libkrb5.so",
+    }),
+    visibility = ["//visibility:public"],
 )
 
-configure_make(
-    name = "krb5",
-    # These don't get make variables expanded, so use the injected environment variable.
-    args = ["-j$KRB5_BUILD_JOBS"],
-    autoreconf = True,
-    autoreconf_options = ["-ivf ./src"],
-    configure_command = "./src/configure",
-    configure_in_place = True,
-    configure_options = [
-        "--srcdir=./src",
-        "--disable-thread-support",
-        "--with-crypto-impl=openssl",
-        "--with-tls-impl=openssl",
-        # Normally, these libraries are auto detected,
-        # but we never want them so explicitly disable
-        # them.
-        "--without-netlib",
-        "--without-keyutils",
-        "--without-lmdb",
-        "--without-libedit",
-        "--without-readline",
-        "--without-system-verto",
-        # TODO(bazel) when building the static library the linker is exiting with a
-        # duplicate symbol error
-        "--enable-shared",
-        "--disable-static",
-        "--enable-asan=$(SANITIZERS)",
-        "--with-system-et",
-        "--with-system-ss",
-        "--with-system-verto",
-        "--with-ldap",
-        "--sbindir=/usr/bin",
-    ],
-    # Need to pass this additionally here because of a bug in the kerberos build where it doesn't properly pass the linker flag down
-    copts = [
-        "-fuse-ld=lld",
-    ],
-    env = {
-        "KRB5_BUILD_JOBS": "$(BUILD_JOBS)",
-        "CPPFLAGS": "-fPIC -I/usr/include/et",
-    },
-    lib_source = ":srcs",
-    out_shared_libs = [
-        # "libcom_err.so.3",
-        "libgssapi_krb5.so.2",
-        "libk5crypto.so.3",
-        "libkrb5.so.3",
-        "libkrb5support.so.0",
-    ],
-    toolchains = [
-        ":build_jobs",
-        ":sanitizers",
-    ],
-    visibility = [
-        "//visibility:public",
-    ],
-    deps = [
-        "@openssl",
-    ],
+cc_import(
+    name = "gssapi_krb5",
+    shared_library = select({
+        "@platforms//os:linux": "/usr/lib/libgssapi_krb5.so",
+        # Add other platforms as needed
+        "//conditions:default": "/usr/lib/libgssapi_krb5.so",
+    }),
+    visibility = ["//visibility:public"],
+)
+
+cc_import(
+    name = "k5crypto",
+    shared_library = select({
+        "@platforms//os:linux": "/usr/lib/libk5crypto.so",
+        # Add other platforms as needed
+        "//conditions:default": "/usr/lib/libk5crypto.so",
+    }),
+    visibility = ["//visibility:public"],
+)
+
+cc_import(
+    name = "krb5support",
+    shared_library = select({
+        "@platforms//os:linux": "/usr/lib/libkrb5support.so",
+        # Add other platforms as needed
+        "//conditions:default": "/usr/lib/libkrb5support.so",
+    }),
+    visibility = ["//visibility:public"],
 )
-- 
2.49.0


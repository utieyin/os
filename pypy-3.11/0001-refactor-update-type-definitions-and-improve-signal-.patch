From 1c7eb0346f966a8a8bb3523d177b6efe58138cf1 Mon Sep 17 00:00:00 2001
From: uti <uti.edun@chainguard.dev>
Date: Mon, 24 Feb 2025 10:33:55 +0000
Subject: [PATCH] refactor: update type definitions and improve signal handling

---
 lib_pypy/_sqlite3_build.py                  | 5 ++---
 pypy/module/cpyext/include/pyconfig.h       | 4 +++-
 rpython/rlib/rvmprof/src/shared/vmp_stack.c | 8 ++++----
 rpython/translator/c/src/signals.h          | 5 +++--
 4 files changed, 12 insertions(+), 10 deletions(-)

diff --git a/lib_pypy/_sqlite3_build.py b/lib_pypy/_sqlite3_build.py
index f4c8e700a2..2a4e57318f 100644
--- a/lib_pypy/_sqlite3_build.py
+++ b/lib_pypy/_sqlite3_build.py
@@ -168,8 +168,8 @@ typedef ... sqlite3;
 typedef ... sqlite3_stmt;
 typedef ... sqlite3_context;
 typedef ... sqlite3_value;
-typedef int64_t sqlite3_int64;
-typedef uint64_t sqlite3_uint64;
+typedef long long int sqlite3_int64;
+typedef unsigned long long int sqlite3_uint64;
 
 int sqlite3_open(
     const char *filename,   /* Database filename (UTF-8) */
@@ -226,7 +226,6 @@ int sqlite3_column_type(sqlite3_stmt*, int iCol);
 const char *sqlite3_column_decltype(sqlite3_stmt*,int);
 
 void sqlite3_progress_handler(sqlite3*, int, int(*)(void*), void*);
-void sqlite3_trace(sqlite3*, void(*)(void*, const char*), void*);
 int sqlite3_trace_v2(
   sqlite3*,
   unsigned uMask,
diff --git a/pypy/module/cpyext/include/pyconfig.h b/pypy/module/cpyext/include/pyconfig.h
index a897524b43..9d25072da8 100644
--- a/pypy/module/cpyext/include/pyconfig.h
+++ b/pypy/module/cpyext/include/pyconfig.h
@@ -29,7 +29,9 @@ extern "C" {
 #ifndef _WIN32
 #define VA_LIST_IS_ARRAY
 #ifndef __APPLE__
-#define HAVE_CLOCK_GETTIME
+#ifndef HAVE_CLOCK_GETTIME
+ #define HAVE_CLOCK_GETTIME
+#endif
 #endif
 #endif
 
diff --git a/rpython/rlib/rvmprof/src/shared/vmp_stack.c b/rpython/rlib/rvmprof/src/shared/vmp_stack.c
index 28041d33f0..c5533a0c75 100644
--- a/rpython/rlib/rvmprof/src/shared/vmp_stack.c
+++ b/rpython/rlib/rvmprof/src/shared/vmp_stack.c
@@ -116,7 +116,7 @@ int vmp_profiles_python_lines(void) {
 #ifdef PYPY_JIT_CODEMAP
     else if (frame->kind == VMPROF_JITTED_TAG) {
         intptr_t pc = ((intptr_t*)(frame->value - sizeof(intptr_t)))[0];
-        *depth = vmprof_write_header_for_jit_addr(result, *depth, pc, max_depth);
+        *depth = vmprof_write_header_for_jit_addr((intptr_t*)result, *depth, pc, max_depth);
     }
 #endif
 
@@ -158,7 +158,7 @@ static PY_STACK_FRAME_T * _write_python_stack_entry(PY_STACK_FRAME_T * frame, vo
 #ifdef PYPY_JIT_CODEMAP
     else if (frame->kind == VMPROF_JITTED_TAG) {
         intptr_t pc = ((intptr_t*)(frame->value - sizeof(intptr_t)))[0];
-        *depth = vmprof_write_header_for_jit_addr(result, *depth, pc, max_depth);
+        *depth = vmprof_write_header_for_jit_addr((intptr_t*)result, *depth, pc, max_depth);
     }
 #endif
 
@@ -343,7 +343,7 @@ int vmp_walk_and_record_stack(_PyInterpreterFrame *frame, void ** result,
             return vmp_walk_and_record_python_stack_only(frame, result, max_depth, depth, pc);
 #ifdef PYPY_JIT_CODEMAP
         } else if (pypy_find_codemap_at_addr(rip, &start_addr) != NULL) {
-            depth = vmprof_write_header_for_jit_addr(result, depth, pc, max_depth);
+            depth = vmprof_write_header_for_jit_addr((intptr_t*)result, depth, pc, max_depth);
             return vmp_walk_and_record_python_stack_only(frame, result, max_depth, depth, pc);
 #endif
         } else {
@@ -497,7 +497,7 @@ int vmp_walk_and_record_stack(PY_STACK_FRAME_T *frame, void ** result,
             return vmp_walk_and_record_python_stack_only(frame, result, max_depth, depth, pc);
 #ifdef PYPY_JIT_CODEMAP
         } else if (pypy_find_codemap_at_addr(rip, &start_addr) != NULL) {
-            depth = vmprof_write_header_for_jit_addr(result, depth, pc, max_depth);
+            depth = vmprof_write_header_for_jit_addr((intptr_t*)result, depth, pc, max_depth);
             return vmp_walk_and_record_python_stack_only(frame, result, max_depth, depth, pc);
 #endif
         } else {
diff --git a/rpython/translator/c/src/signals.h b/rpython/translator/c/src/signals.h
index 63715f4f1e..25da8080f7 100644
--- a/rpython/translator/c/src/signals.h
+++ b/rpython/translator/c/src/signals.h
@@ -23,8 +23,9 @@ int pypysig_poll(void);   /* => signum or -1 */
 RPY_EXTERN
 void pypysig_pushback(int signum);
 
-#define PATH_MAX 1024
-
+#ifndef PATH_MAX
+ #define PATH_MAX 1024
+#endif
 /* When a signal is received, pypysig_counter is set to -1. */
 struct pypysig_long_struct_inner {
     Signed value;
-- 
2.48.1


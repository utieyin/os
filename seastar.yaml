package:
  name: seastar
  epoch: 0
  version: "25.05.0"
  description: "Seastar is a high-performance, open-source framework for building C++ applications"
  copyright:
    - license: "Apache-2.0"

environment:
  contents:
    packages:
      - bison
      - boost-dev
      - build-base
      - c-ares-dev
      - cryptopp
      - doxygen
      - fmt-dev
      - gnutls-dev
      - hwloc-dev
      - libsctp-dev
      - liburing-dev
      - lz4-dev
      - numactl-dev
      - pkgconf-dev
      - protobuf-dev=3.29.4
      - python-${{vars.py-version}}
      - ragel
      - util-linux-dev
      - valgrind-dev
      - xfsprogs-dev
      - yaml-cpp-dev

vars:
  py-version: 3.13

pipeline:
  - uses: git-checkout
    with:
      repository: "https://github.com/scylladb/seastar.git"
      tag: seastar-${{package.version}}
      expected-commit: 8df8212e53577e1d8477a5c901457cd61d88afc7

  # Configure step

  - uses: cmake/configure
    with:
      opts: |
        -DSeastar_TESTING=OFF \
        -DPROTOBUF_SOURCE=SYSTEM \
        -DWITH_SSL=system

  # Build step
  - uses: cmake/build

  # Install step
  - uses: cmake/install

  - uses: strip

subpackages:
  - name: ${{package.name}}-dev
    pipeline:
      - uses: split/dev
    dependencies:
      runtime:
        - ${{package.name}}
    description: seastar dev
    test:
      pipeline:
        - uses: test/tw/ldd-check

test:
  pipeline:
    - name: "Verify library installation"
      uses: test/tw/ldd-check
      with:
        packages: ${{package.name}}
        verbose
        # - name: "Verify pkg-config"
        #   runs: |
        #     pkg-config --exists seastar
        #     pkg-config --modversion seastar | grep "${{package.version}}"

        # - name: "Compile and run a simple Seastar application"
        #   runs: |
        #     cat > test_app.cc << 'EOF'
        #     #include <seastar/core/app-template.hh>
        #     #include <seastar/core/reactor.hh>
        #     #include <seastar/core/future.hh>
        #     #include <iostream>

        #     int main(int argc, char** argv) {
        #         seastar::app_template app;

        #         app.run(argc, argv, [] {
        #             std::cout << "Seastar test application running successfully!" << std::endl;
        #             return seastar::make_ready_future<>();
        #         });
        #         return 0;
        #     }
        #     EOF

        #     g++ -std=c++20 test_app.cc -o test_app $(pkg-config --cflags --libs seastar)
        #     ./test_app --smp 1

        # - name: "Test with more complex features"
        #   runs: |
        #     cat > future_test.cc << 'EOF'
        #     #include <seastar/core/app-template.hh>
        #     #include <seastar/core/reactor.hh>
        #     #include <seastar/core/future.hh>
        #     #include <seastar/core/sleep.hh>
        #     #include <iostream>
        #     #include <chrono>

        #     using namespace seastar;
        #     using namespace std::chrono_literals;

        #     future<> test_sleep() {
        #         std::cout << "Sleeping for 100ms..." << std::endl;
        #         return sleep(100ms).then([] {
        #             std::cout << "Woke up successfully!" << std::endl;
        #             return make_ready_future<>();
        #         });
        #     }

        #     int main(int argc, char** argv) {
        #         app_template app;

        #         return app.run(argc, argv, [] {
        #             return test_sleep().then([] {
        #                 std::cout << "All tests completed successfully!" << std::endl;
        #                 return make_ready_future<>();
        #             });
        #         });
        #     }
        #     EOF

        #     g++ -std=c++20 future_test.cc -o future_test $(pkg-config --cflags --libs seastar)
        #     ./future_test --smp 1

        # - uses: test/tw/ldd-check

        # - uses: test/pkgconf: true

update:
  enabled: true
  github:
    identifier: scylladb/seastar
    strip-prefix: seastar-
